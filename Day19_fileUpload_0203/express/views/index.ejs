<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Document</title>
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    </head>
    <body>
        <h1>FORM 싱글연습</h1>
        <!-- 파일업로드때는 post방식  -->
        <form action="/upload" method="post" enctype="multipart/form-data">
            <input type="file" name="userfile" /><br />
            <input type="text" name="title" /><br />
            <button type="submit">업로드</button>
        </form>

        <h1>FORM 멀티 연습(ver1)</h1>
        <form action="/upload/array" method="post" enctype="multipart/form-data">
            <input type="file" name="userfiles" multiple /><br />
            <input type="text" name="title" /><br />
            <button type="submit">업로드</button>
        </form>

        <h1>FORM 멀티연습 (ver2)</h1>
        <!-- 하나의 요청이 아닌 여러 개의 요청이 들어올 때 -->
        <form action="/upload/fields/" method="post" enctype="multipart/form-data">
            <input type="file" name="userFile1" /><br />
            <input type="text" name="title1" /><br />
            <input type="file" name="userFile2" /><br />
            <input type="text" name="title2" /><br />
            <button type="submit">업로드</button>
        </form>

        <h1>동적 파일 업로드</h1>
        <form>
            <input type="file" id="userfile" /><br />
            <input type="text" id="title" /><br />
            <button type="button" onclick="fileUpload()">업로드</button>
        </form>
        <br />
        <br />
        <div class="resultBox"></div>
        <script>
            const resultBox = document.querySelector('.resultBox');
            function fileUpload() {
                const file = document.querySelector('#userfile');
                //파일에 접근하기 위해서 file.files[0]을 사용
                //file.files는 배열을 반환하며 우리가 원하는 것은 첫번째 요소이기 때문에 [0]를 해주는 것
                console.log(file.files[0]);

                //FormData : 자바스크립트 내장 객체이고 폼 데이터를 생성해줌
                const formData = new FormData();
                //append(key, value) - key 자리에는 차피 백엔드로 보내는거니까 이름 상관없다.
                formData.append('title', document.querySelector('#title').value);
                formData.append('file', file.files[0]); //file은 가장 마지막에 써야함. 위에다가 일반데이터를 써주고 파일은 마지막!!!!

                axios({
                    method: 'post',
                    url: '/upload/axios',
                    data: formData,
                    headers: {
                        'Content-Type': 'multipart/form-data', //동적업로드할때 비동기에는 form에 넣어줬지만 동적에선 꼭 여기에서 넣어줘야한다.
                    },
                }).then((res) => {
                    console.log('res', res);
                    resultBox.innerHTML = `<p> 이름은 ${res.data.title.title}</p><img src = ${res.data.file.path} width = "300px" height = "300px">`; //html에 바로 보여지게
                });
            }
        </script>
    </body>
</html>
