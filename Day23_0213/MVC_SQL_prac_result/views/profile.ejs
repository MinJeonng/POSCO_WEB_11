<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Document</title>
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    </head>
    <body>
        <h1>회원정보 조회</h1>
        <form name="info-form">
            <input type="text" id="id" readonly /><br />
            <input type="password" id="pw" placeholder="비밀번호" /><br />
            <input type="text" id="username" placeholder="이름" />
            <button type="button" onclick="updateFunc()">수정</button>
            <button type="button" onclick="deleteFunc()">탈퇴</button>
            <input type="hidden" id="db" />
        </form>
    </body>
    <script>
        console.log(document.location.href);
        const temp = document.location.href.split('profile/'); //맨 마지막 id를 얻기 위해 split해서 배열로 나눔. 그러면 id 이전이 배열[0]일테니 [1]만 가져오자
        console.log(temp);
        //페이지 실행되자마자 바로 뜨게 하는 것
        (async function () {
            const result = await axios({
                method: 'get',
                url: `/api/user/info/${temp[1]}`,
            });
            const { id, userid, pw, username } = result.data.info; //오류발생
            document.querySelector('#id').value = userid; //데이터 넣어줌
            document.querySelector('#pw').value = pw;
            document.querySelector('#username').value = username;
            document.querySelector('#db').value = id;
            console.log(result);
        })();
        function updateFunc() {
            const form = document.forms['info-form'];
            axios({
                method: 'patch',
                url: '/api/user/update',
                data: {
                    pw: form.pw.value,
                    username: form.username.value,
                    id: Number(form.db.value),
                },
            }).then((res) => {
                console.log('res', res);
                if (res.data.result) {
                    alert('회원정보가 성공적으로 수정되었습니다.');
                    document.location.reload();
                }
            });
        }
        function deleteFunc() {
            if (!confirm('탈퇴하시겠습니까?')) {
                return;
            }
            const form = document.forms['info-form'];
            axios({
                method: 'delete',
                url: '/api/user/delete',
                data: {
                    id: Number(form.db.value),
                },
            }).then((res) => {
                console.log('res', res);
                if (res.data.result) {
                    alert('탈퇴가 완료되었습니다.');
                    document.location.href = '/';
                    //document.location.reload();
                }
            });
        }
    </script>
</html>
