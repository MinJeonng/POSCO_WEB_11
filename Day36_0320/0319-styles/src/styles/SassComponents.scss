//SASS styling : css 전처리

/*
// - 변수 선언 : $ 키워드 사용
$color-red: red;
$color-yellow: yellow;
$color-orange: orange;

//- 믹스인(함수) 선언(정의)
//() : 파라미터 값을 받음
@mixin box($size) {
  width: $size; //전달받은 size로 사용하겠다.
  height: $size;
}

//- 중첩 : 부모 자식 관계를 표현할 수 있음
.container {
  display: flex;

  .box {
    // width: 100px;
    //mixin 호출
    @include box(150px); //box라는 클래스를 가진 요소에 () 안의 값이 적용된다.

    &.red {
      //& 표시 : className="box red" 뜻과 동일하다. , 부모 선택자 참조해서 치환
      background-color: $color-red;
    }
    &.orange {
      background-color: $color-orange;
    }
    &.yellow {
      background-color: $color-yellow;
    }
  }
}
*/

@import './variables.scss';
@import './utils.scss';

// - 변수 선언: $ 키워드 사용
// $color-red: red;
// $color-orange: orange;
// $color-yellow: yellow;
// - 믹스인(함수) 선언(정의)
// @mixin box($size) {
//   width: $size;
//   height: $size;
// }
// - 중첩: 부모 자식 관계 표현
.container {
  display: flex;

  .box {
    // width: 100px;
    // 믹스인 호출
    @include box(150px);

    // &: 부모 선택자 참조해서 치환
    &.red {
      // &.red = .box.red
      background-color: $color-red;
    }

    &.orange {
      background-color: $color-orange;
    }

    &.yellow {
      background-color: $color-yellow;
    }

    &:hover {
      // - 연산 가능
      $box-animation: $animation-duration * 2;
      transform: translateY(-20px);
      transition: transform $box-animation;
    }
  }
}

.btn {
  padding: 10px;
  margin: 10px;
  border: 1px solid black;
}

.btn-primary {
  // - 확장: 기존 선택자 스타일을 다른 선택자에게 상속
  @extend .btn;
  background-color: pink;
}
